name: .NET Code Analysis

on:
  push:
    branches: [ 'v[1-9][0-9].0' ]
  pull_request:
    branches: [ 'v[1-9][0-9].0' ]

jobs:
  NET-Code-Analysis:
    name: .NET Code Analysis runner
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup dotnet SDK
        uses: actions/setup-dotnet@v4
        with:
            global-json-file: global.json
      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        id: nuget-cache
        with:
            path: |
              ~/.nuget/packages
              ${{ github.workspace }}/**/obj/project.assets.json
            key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
            restore-keys: |
              ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
              ${{ runner.os }}-nuget-
      # Run NuGet restore for the solution at repo root
      - name: Run NuGet restore
        run: dotnet restore

      # Run code analysis for the solution at repo root
      - name: Run .NET Code Analysis
        uses: dotnet/code-analysis@main
        id: code-analysis
        with:
          build-breaking: false
          all-categories: latest

      # Upload the analysis results file
      - name: Upload analysis results
        uses: actions/upload-artifact@v3
        with:
          name: analysis_results.sarif
          path: ${{ steps.code-analysis.outputs.sarifFile }}
